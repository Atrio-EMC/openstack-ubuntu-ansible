- name: verify if default domain has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack domain show default
  register: result
  ignore_errors: True

- name: ensure default domain is created
  environment: '{{k3}}'
  command: /usr/bin/openstack domain create --description "Default Domain" default
  when: result|failed

- name: verify if admin project has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack project show admin
  register: result
  ignore_errors: True

- name: ensure admin project is created
  environment: '{{k3}}'
  command: /usr/bin/openstack project create --domain default --description "Admin Project" admin
  when: result|failed

- name: verify if admin user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show admin
  register: result
  ignore_errors: True

- name: ensure admin user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default admin --password {{ admin_pass }}
  when: result|failed

- name: verify if admin role has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack role show admin
  register: result
  ignore_errors: True

- name: ensure admin role is created
  environment: '{{k3}}'
  command: /usr/bin/openstack role create admin
  when: result|failed

- name: ensure admin role is added to admin user
  environment: '{{k3}}'
  command: openstack role add --project admin --user admin admin
  
- name: verify if service project has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack project show service
  register: result
  ignore_errors: True

- name: ensure service project is created
  environment: '{{k3}}'
  command: /usr/bin/openstack project create --domain default --description "Service Project" service
  when: result|failed

- name: verify if demo project has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack project show demo
  register: result
  ignore_errors: True

- name: ensure demo project is created
  environment: '{{k3}}'
  command: /usr/bin/openstack project create --domain default --description "Demo Project" demo
  when: result|failed

- name: verify if demo user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show demo
  register: result
  ignore_errors: True

- name: ensure demo user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default demo --password {{ demo_pass }}
  when: result|failed

- name: verify if user role has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack role show user
  register: result
  ignore_errors: True

- name: ensure user role is created
  environment: '{{k3}}'
  command: /usr/bin/openstack role create user
  when: result|failed

- name: ensure user role is added to demo user
  environment: '{{k3}}'
  command: openstack role add --project demo --user demo user
  
# Services and endpoints using templated.Catalog

- name: ensure service and endpoints are defined
  template: >-
    src=etc/keystone/default_catalog.templates
    dest=/etc/keystone/default_catalog.templates
    owner=root
    group=root
    mode=0644
  notify: restart apache2

# Glance
- name: verify if glance user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show glance
  register: result
  ignore_errors: True

- name: ensure glance user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default glance --password {{ glance_identity_password }}
  when: result|failed

- name: ensure admin role is added to glance user
  environment: '{{k3}}'
  command: openstack role add --project service --user glance admin
  
# Nova
- name: verify if nova user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show nova
  register: result
  ignore_errors: True

- name: ensure nova user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default nova --password {{ nova_identity_password }}
  when: result|failed

- name: ensure admin role is added to nova user
  environment: '{{k3}}'
  command: openstack role add --project service --user nova admin

# Placement

- name: verify if Placement user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show placement
  register: result
  ignore_errors: True

- name: ensure placement user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default placement --password {{ placement_identity_password }}
  when: result|failed

- name: ensure admin role is added to placement user
  environment: '{{k3}}'
  command: openstack role add --project service --user placement admin

# Neutron
- name: verify if neutron user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show neutron
  register: result
  ignore_errors: True

- name: ensure neutron user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default neutron --password {{ neutron_identity_password }}
  when: result|failed

- name: ensure admin role is added to neutron user
  environment: '{{k3}}'
  command: openstack role add --project service --user neutron admin
  
# Cinder
- name: verify if cinder user has been created
  environment: '{{k3}}'
  command: /usr/bin/openstack user show cinder
  register: result
  ignore_errors: True

- name: ensure cinder user is created
  environment: '{{k3}}'
  command: /usr/bin/openstack user create --domain default cinder --password {{ cinder_identity_password }}
  when: result|failed

- name: ensure admin role is added to cinder user
  environment: '{{k3}}'
  command: openstack role add --project service --user cinder admin
  

- name: ensure openrc admin file is created in root home directory
  template: >-
    src=root/openrc
    dest=/root/admin_openrc.sh
    owner=root
    group=root
    mode=600

- name: ensure openrc demo file is created in root home directory
  template: >-
    src=root/demo_openrc
    dest=/root/demo_openrc.sh
    owner=root
    group=root
    mode=600